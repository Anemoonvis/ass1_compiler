// Implementation of assignment 1.1; Thijs Vromen 12026069; NB very little comments,
// because it seems to be elementary programming to get used to civicc.
#include "civic.h"

// Calculate the greatest common denominator of ints a and b.
export int gcd(int a, int b){
    if (b != 0) {
        return gcd(b, a % b);
    } else {
        return a;
    }
}

// Calculate the factorial of int n.
export int fac(int n){
    if (n > 0) {
        return n * fac(n - 1);
    } else {
        return 1;
    }
}

// Calculate the nth fibonacci number, using a for loop and 'next' placeholder
// to avoid calculating intermediate numbers multiple times.
export int fib(int n){
    int first = 0;
    int second = 1;
    int next = 0;
    if (n == 1){
        return first;
    }
    if (n == 2){
        return second;
    }
    for (int i = 2, n){
        next = first + second;
        first = second;
        second = next;
    }
    return next;
}

// Return true if the input int n is a prime, false otherwise.
export bool isprime(int n){
    int half = n / 2;
    if (half == 0){
        return false;
    }
    for (int i = 2, half + 1){
        if (n % i == 0){
            return false;
        }
    }
    return true;
}