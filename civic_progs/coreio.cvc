// Implementation of assignment 1.2; Thijs Vromen 12026069; NB very little comments,
// because it seems to be elementary programming to get used to civicc.
#include "civic.h"
#include "core.h"

// Print the first n fibonacci numbers, using fib() from core.cvc. 
// (of course recalculates all the intermediate numbers for each new number, 
// so could be far more efficient.)
export void fibs(int n){
    for (int i = 1, n + 1){
        printInt(fib(i));
        printNewlines(1);
    }
}

// Print the first n primes, using a nested clone of isprime() from core.cvc.
// (similarly inefficient.)
export void primes(int n){
    int number = 2;

    // Cloned helper function.
    bool isprime(int n){
        int half = n / 2;
        if (half == 0){
            return false;
        }
        for (int i = 2, half + 1){
            if (n % i == 0){
                return false;
            }
        }
        return true;
    }

    while (n > 0){
         if (isprime(number)){
            printInt(number);
            printNewlines(1);
            n = n - 1;
         }
         number = number + 1;
    }
}