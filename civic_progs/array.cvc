// Implementation of assignment 1.3; Thijs Vromen 12026069; NB very little comments,
// because it seems to be elementary programming to get used to civicc.
#include "civic.h"

// Functions to print int/float vectors to stdout.
export void printIntVec(int[n] vec){
    for (int i = 0, n - 1){
        printInt(vec[i]);
        printSpaces(1);
    }
    printInt(vec[n - 1]);
    printNewlines(1);
}

export void printFloatVec(float[n] vec ){
    for (int i = 0, n - 1){
        printFloat(vec[i]);
        printSpaces(1);
    }
    printFloat(vec[n - 1]);
    printNewlines(1);
}

// Functions to print int/float matrices to stdout.
export void printIntMat(int[m, n] mat){
    for (int i = 0, m){
        for (int j = 0, n){
            printInt(mat[i,j]);
            if (j < n - 1) printSpaces(1);
        }
        printNewlines(1);
    }
}

export void printFloatMat(float[m, n] mat){
    for (int i = 0, m){
        for (int j = 0, n){
            printFloat(mat[i,j]);
            if (j < n - 1) printSpaces(1);
        }
        printNewlines(1);
    }
}

// Functions to scan int/float vectors from stdin.
export void scanIntVec(int[n] vec ){
    for (int i = 0, n){
        vec[i] = scanInt();
    }
}

export void scanFloatVec(float[n] vec ){
    for (int i = 0, n){
        vec[i] = scanFloat();
    }
}

// Functions to scan int/float matrices from stdin.
export void scanIntMat(int[m, n] mat ){
    for (int i = 0, m){
        for (int j = 0, n){
            mat[i,j] = scanInt();
        }
    }
}

export void scanFloatMat(float[m, n] mat ){
    for (int i = 0, m){
        for (int j = 0, n){
            mat[i,j] = scanFloat();
        }
    }
}


// Multiply two float matrices (a and b) and store the result in c.
export void matMul(float[m, n] a, float[o, p] b, float[q, l] c){
    for (int i = 0, m){
        for (int j = 0, p){
            // Calculate the result entry c[i, j] by summing the pairwise products.
            c[i, j] = 0.0;
            for (int x = 0, n){
                c[i, j] += a[i, x] * b[x, j];
            }
        }
    }
}